namespace DesafioFundamentos.Models
{
    public class Estacionamento
    {
        private decimal precoInicial = 0;
        private decimal precoPorHora = 0;
        private List<string> veiculos = new List<string>();

        public Estacionamento(decimal precoInicial, decimal precoPorHora)
        {
            this.precoInicial = precoInicial;
            this.precoPorHora = precoPorHora;
        }

        public void AdicionarVeiculo()
        {
            //implementado üëçüèº
            Console.WriteLine("-".PadLeft(50, '-'));
            Console.WriteLine("Digite a placa do ve√≠culo para estacionar:");
            Console.WriteLine("-".PadLeft(50, '-'));

            veiculos.Add(Console.ReadLine().ToUpper());
            Console.WriteLine("-".PadLeft(50, '-'));
        }

        public void RemoverVeiculo()
        {
            //implementado üëçüèº
            string placa = string.Empty;
            Console.WriteLine("-".PadLeft(50, '-'));
            Console.WriteLine("Digite a placa do ve√≠culo para remover:");
            Console.WriteLine("-".PadLeft(50, '-'));
            placa = Console.ReadLine();

            // Verifica se o ve√≠culo existe
            if (veiculos.Any(x => x.ToUpper() == placa.ToUpper()))
            {
                int horas = 0;
                decimal valorTotal = 0;
                
                //modificado ‚úåüèº
                Console.WriteLine("-".PadLeft(80, '-'));
                Console.WriteLine("Digite a quantidade de horas que o ve√≠culo permaneceu estacionado:");
                Console.WriteLine("-".PadLeft(80, '-'));
                horas = int.Parse(Console.ReadLine());

                //implementado üëçüèº
                valorTotal = (precoPorHora * horas) + precoInicial;
                Console.WriteLine("-".PadLeft(80, '-'));
                Console.WriteLine($"O ve√≠culo {placa.ToUpper()} foi removido e o pre√ßo total foi de: R$ {valorTotal.ToString("N2")}");
                Console.WriteLine("-".PadLeft(80, '-'));

                //removendo item na Lista
                veiculos.Remove(placa.ToUpper());
            }
            else
            {
                //modificado ‚úåüèº
                Console.WriteLine("-".PadLeft(50, '-'));
                Console.WriteLine("Desculpe, esse ve√≠culo n√£o est√° estacionado aqui.\n" +
                    "Confira se digitou a placa corretamente");
                Console.WriteLine("-".PadLeft(50, '-'));
            }
        }

        public void ListarVeiculos()
        {
            // Verifica se h√° ve√≠culos no estacionamento
            if (veiculos.Any())
            {
                //modificado ‚úåüèº
                Console.WriteLine("-".PadLeft(50, '-'));
                Console.WriteLine("Os ve√≠culos estacionados s√£o:");
                Console.WriteLine("-".PadLeft(50, '-'));

                //implementado üëçüèº
                int contadorVeiculos = 0;
                foreach (string item in veiculos)
                {
                    contadorVeiculos++;
                    Console.WriteLine($"{contadorVeiculos}¬∫ Ve√≠culo Placa: {item}");
                }

                Console.WriteLine("-".PadLeft(50, '-'));
            }
            else
            {
                //modificado ‚úåüèº
                Console.WriteLine("-".PadLeft(50, '-'));
                Console.WriteLine("N√£o h√° ve√≠culos estacionados.");
                Console.WriteLine("-".PadLeft(50, '-'));
            }
        }
    }
}